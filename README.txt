```markdown
# Solidity Basics
<p align="right"><a href="#-descri√ß√£o">Leia em Portugu√™s</a></p>

![Project Screenshot](solidity-basics-screenshot-0.png)

A repository containing a collection of basic to intermediate smart contracts to study the fundamental concepts of the **Solidity** language, using **Hardhat** for the development environment.

## üìù Description

This project serves as a practical study guide for Solidity. It includes a series of smart contracts, each designed to demonstrate a specific concept of the language, from basic syntax like variables and functions, to more complex topics like inheritance, modifiers, and contract interaction. The repository is structured to facilitate learning and experimentation for developers new to blockchain and smart contract development.

## ‚ú® Key Features

-   ‚úÖ Examples of basic data types, variables, and operators.
-   ‚úÖ Demonstration of function visibility (public, private, internal, external), return values, and modifiers.
-   ‚úÖ Implementation of control structures such as `for` and `while` loops and `if/else` conditionals.
-   ‚úÖ Exploration of advanced concepts like inheritance, constructors, and abstract contracts.
-   ‚úÖ A complete Ballot contract demonstrating a practical voting and delegation system.

## üõ†Ô∏è Technologies Used

![Solidity](https://img.shields.io/badge/Solidity-%23363636.svg?style=for-the-badge&logo=solidity&logoColor=white)
![Hardhat](https://img.shields.io/badge/Hardhat-D6E52F?style=for-the-badge&logo=hardhat&logoColor=black)
![TypeScript](https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white)
![Ethereum](https://img.shields.io/badge/Ethereum-3C3C3D?style=for-the-badge&logo=Ethereum&logoColor=white)

## üöÄ Getting Started

Follow these instructions to get a copy of the project up and running on your local machine for development and testing purposes.

**Prerequisites**

You need to have Node.js and npm (or yarn) installed on your machine.

**Installation**

1.  Clone the repository:
    ```bash
    git clone https://github.com/Buenohy/solidity-basics.git
    ```

2.  Navigate to the project directory:
    ```bash
    cd solidity-basics
    ```

3.  Install the dependencies:
    ```bash
    npm install
    ```

**Running the Project**

1.  Compile the smart contracts:
    ```bash
    npx hardhat compile
    ```

2.  Run the tests (if any are configured):
    ```bash
    npx hardhat test
    ```

## üë®‚Äçüíª Author

**Gabriel Bueno Hygino**

-   LinkedIn: [linkedin.com/in/gabrielbuenohygino](https://www.linkedin.com/in/gabrielbuenohygino/)
-   GitHub: [@Buenohy](https://github.com/Buenohy)

## ‚öñÔ∏è License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for more details.

---

# Fundamentos de Solidity
<p align="right"><a href="#-description">Read in English</a></p>

![Screenshot do Projeto](solidity-basics-screenshot-0.png)

Um reposit√≥rio contendo uma cole√ß√£o de contratos inteligentes (smart contracts) de n√≠vel b√°sico a intermedi√°rio para estudar os conceitos fundamentais da linguagem **Solidity**, utilizando **Hardhat** como ambiente de desenvolvimento.

## üìù Descri√ß√£o

Este projeto serve como um guia de estudo pr√°tico para Solidity. Ele inclui uma s√©rie de contratos inteligentes, cada um projetado para demonstrar um conceito espec√≠fico da linguagem, desde a sintaxe b√°sica como vari√°veis e fun√ß√µes, at√© t√≥picos mais complexos como heran√ßa, modificadores e intera√ß√£o entre contratos. O reposit√≥rio est√° estruturado para facilitar o aprendizado e a experimenta√ß√£o para desenvolvedores que est√£o come√ßando no mundo de blockchain e no desenvolvimento de smart contracts.

## ‚ú® Principais Funcionalidades

-   ‚úÖ Exemplos de tipos de dados b√°sicos, vari√°veis e operadores.
-   ‚úÖ Demonstra√ß√£o da visibilidade de fun√ß√µes (public, private, internal, external), valores de retorno e modificadores.
-   ‚úÖ Implementa√ß√£o de estruturas de controle como loops `for` e `while` e condicionais `if/else`.
-   ‚úÖ Explora√ß√£o de conceitos avan√ßados como heran√ßa, construtores e contratos abstratos.
-   ‚úÖ Um contrato de Vota√ß√£o (Ballot) completo, demonstrando um sistema pr√°tico de vota√ß√£o e delega√ß√£o.

## üõ†Ô∏è Tecnologias Utilizadas

![Solidity](https://img.shields.io/badge/Solidity-%23363636.svg?style=for-the-badge&logo=solidity&logoColor=white)
![Hardhat](https://img.shields.io/badge/Hardhat-D6E52F?style=for-the-badge&logo=hardhat&logoColor=black)
![TypeScript](https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white)
![Ethereum](https://img.shields.io/badge/Ethereum-3C3C3D?style=for-the-badge&logo=Ethereum&logoColor=white)

## üöÄ Como Executar

Siga estas instru√ß√µes para obter uma c√≥pia do projeto em execu√ß√£o na sua m√°quina local para fins de desenvolvimento e teste.

**Pr√©-requisitos**

Voc√™ precisa ter o Node.js e o npm (ou yarn) instalados em sua m√°quina.

**Instala√ß√£o**

1.  Clone o reposit√≥rio:
    ```bash
    git clone https://github.com/Buenohy/solidity-basics.git
    ```

2.  Navegue at√© o diret√≥rio do projeto:
    ```bash
    cd solidity-basics
    ```

3.  Instale as depend√™ncias:
    ```bash
    npm install
    ```

**Executando o Projeto**

1.  Compile os contratos inteligentes:
    ```bash
    npx hardhat compile
    ```

2.  Execute os testes (se houver algum configurado):
    ```bash
    npx hardhat test
    ```

## üë®‚Äçüíª Autor

**Gabriel Bueno Hygino**

-   LinkedIn: [linkedin.com/in/gabrielbuenohygino](https://www.linkedin.com/in/gabrielbuenohygino/)
-   GitHub: [@Buenohy](https://github.com/Buenohy)

## ‚öñÔ∏è Licen√ßa

Este projeto est√° licenciado sob a Licen√ßa MIT. Veja o arquivo [LICENSE](LICENSE) para mais detalhes.
```